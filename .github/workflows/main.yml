on: [push]
jobs:
  simplified-moran:
    if: ${{ github.repository == 'rimeinn/rime-moran' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cd tools && python3 -m pip install pdm && pdm install
      - run: sudo apt install opencc p7zip-full
      - run: pdm use -f tools/.venv && $(pdm venv activate) && ./make_simp_dist.sh github
      - uses: actions/upload-artifact@v4
        with:
          name: "Simp-FullPack"
          path: dist/**
      - uses: actions/upload-artifact@v4
        with:
          name: "Simp-DictsOnly"
          path: |
            dist/moran.base.dict.yaml
            dist/moran.tencent.dict.yaml
            dist/moran.moe.dict.yaml
            dist/moran.computer.dict.yaml
            dist/moran.hanyu.dict.yaml
            dist/moran.words.dict.yaml
      - name: Deploy to branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
          publish_branch: simp
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
  traditional-moran:
    if: ${{ github.repository == 'rimeinn/rime-moran' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          git archive HEAD -o archive.tar
          mkdir -p dist
          tar xf archive.tar -C dist
          rm -rf dist/tools dist/.git dist/.github dist/make_simp_dist.sh dist/tests
      - uses: actions/upload-artifact@v4
        with:
          name: "Trad-FullPack"
          path: dist/**
      - uses: actions/upload-artifact@v4
        with:
          name: "Trad-DictsOnly"
          path: |
            dist/moran.base.dict.yaml
            dist/moran.tencent.dict.yaml
            dist/moran.moe.dict.yaml
            dist/moran.computer.dict.yaml
            dist/moran.hanyu.dict.yaml
            dist/moran.words.dict.yaml
      - name: Deploy to branch
        if: ${{ github.repository == 'rimeinn/rime-moran' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
          publish_branch: trad

  demo-simp:
    if: ${{ github.repository == 'rimeinn/rime-moran' }}
    runs-on: ubuntu-24.04
    needs: [simplified-moran]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Simp-FullPack
      - name: Build
        run: |
          sudo apt install -y librime-data librime-bin

          rm -f *.gram
          cat >moran.extended.dict.yaml <<EOF
          ---
          name: moran.extended
          version: "mini"
          sort: by_weight
          use_preset_vocabulary: false
          import_tables: [moran.chars, moran.base, moran.words]
          ...
          EOF

          rime_deployer --build . /usr/share/rime-data ./build
          rm -rf ./*.yaml
      - uses: actions/upload-artifact@v4
        with:
          name: Simp-Demo
          path: |
            build/
            lua/
            opencc/

  demo-trad:
    if: ${{ github.repository == 'rimeinn/rime-moran' }}
    runs-on: ubuntu-24.04
    needs: [traditional-moran]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Trad-FullPack
      - name: Build
        run: |
          sudo apt install -y librime-data librime-bin

          rm -f *.gram
          cat >moran.extended.dict.yaml <<EOF
          ---
          name: moran.extended
          version: "mini"
          sort: by_weight
          use_preset_vocabulary: false
          import_tables: [moran.chars, moran.base, moran.words]
          ...
          EOF

          rime_deployer --build . /usr/share/rime-data ./build
          rm -rf ./*.yaml
      - uses: actions/upload-artifact@v4
        with:
          name: Trad-Demo
          path: |
            build/
            lua/
            opencc/

  # upload-to-hamster:
  #   needs: [simplified-moran, traditional-moran]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Download Simplified Moran Artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: "简体完整配置包"
  #         path: simplified_artifact

  #     - name: Archive Simplified Moran Artifact
  #       run: ( cd simplified_artifact/ && zip -r ../simplified_artifact.zip . )

  #     - name: Download Traditional Moran Artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: "繁體完整配置包"
  #         path: traditional_artifact

  #     - name: Archive Traditional Moran Artifact
  #       run: ( cd traditional_artifact/ && zip -r ../traditional_artifact.zip . )

  #     - name: Upload artifacts to Hamster
  #       env:
  #         HTTP_AUTHORIZATION: ${{ secrets.HTTP_AUTHORIZATION }}
  #         HTTP_HAMSTER_USERID: ${{ secrets.HTTP_HAMSTER_USERID }}
  #       run: |
  #         pip3 install -r tools/requirements.txt
  #         # 魔然【简】
  #         python3 tools/hamsterUpload.py 0AD56D4E-010E-4961-B6AB-4FFDEA4AA5BF simplified_artifact.zip --variant 简体
  #         # 魔然【繁】
  #         python3 tools/hamsterUpload.py D5C8710C-DF74-4004-B5C6-742344BCDC69 traditional_artifact.zip --variant 繁體

